<script src="{$basePath}/modules/colorbox/jquery.colorbox.js"></script>
<script>
	// PRESENTER links
	// generate link and update it on every snippet redraw in itemList.phtml
 	var linkReloadItemList = {link reloadItemList!};
 	var linkEditFileDesc = {link editFileDesc! __ID__}

 	$('.editable textarea').livequery('resize', function() {
 		$.colorbox.resize();
 	});
 	
 	// @see http://colorpowered.com/colorbox/
 	$(function() {
		$("a[rel='images']").livequery( function () {
		 	var fileDetailModal = $('#file-detail-modal');
//		 	var linkReloadItemList = {link reloadItemList!};
			$(this).colorbox({
				inline: true,
				loop: false,
				preloading: true,
//				preloading: false,
				scrolling: false,
				innerWidth: '460px',
				initialHeight: '500px',
				href: "#file-detail-modal",
				onLoad: function() {
					var el = $(this);
					var item = el.parent('.item');
					fileDetailModal.find('img').attr('src', el.attr('href'));
					fileDetailModal.find('a.download-link').attr('href', item.find('a.download-link').attr('href'));
					fileDetailModal.find('.downloads').text(item.find('.downloads').text());
					fileDetailModal.find('.filetype').text(item.find('.filetype').text());
					fileDetailModal.find('.add2lightbox').html(item.find('.add2lightbox').html());
					
					var taglist = fileDetailModal.find('.file-detail-taglist');
					var tagSpinner = taglist.prevAll('.tags-heading').find('.spinner').show();
					var descSpinner = fileDetailModal.find('#descSpinner').show();

					initTagInput();
	
					var itemId = el.prev('.itemId').text();

					// set correct link for description edit
					// whole element must be replaced by self due to editable events binding
					var editable = fileDetailModal.find('.description-container .editable');
					editable.attr('data-editable-process-url', linkEditFileDesc.replace('__ID__', itemId));
					var editableClone = editable.clone();
					editable.replaceWith(editableClone);

					$.getJSON(linkGetFileDesc.replace('__ID__', itemId), function(data) {
						fileDetailModal.find('p.editable').html(data['desc']);
					  	descSpinner.hide();
					  	$.colorbox.resize();
					});
					
				 	$.getJSON(linkGetTags.replace('__ID__', itemId), function(data) {
				 		// set file id for tag binding
				 		$('#frmbindTagForm-fileId').val(itemId);
				 		
				 		// render bound tags
						var items = buildTagList(data['tags'], itemId);
					  	taglist.html(
						  	$('<ul/>', {
							    html: items.join('')
						  	})
					  	);
					  	tagSpinner.hide();
					  	$.colorbox.resize();
					});
					
					toggleBindTagContainer(fileDetailModal.find('.bindTagContainer'), false);

					// reset bind form first
					$('.bindTagForm')[0].reset();
					fileDetailModal.find('.tag-value').empty();
					
					// update colorbox size after each suggested tag 
					fileDetailModal.find('.tag-suggest li').livequery(function() {
						$this = $(this);
						// if tag already bound to file, remove it
						if ($.inArray($this.text(), getTaglistItemValues(taglist)) !== -1) {
							$this.remove();
						}

						// todo: nefunguje resize, ak je tam selectbox otvoreny
//						$.colorbox.resize();
					});
					
					
					// submit form after each tag selected
					fileDetailModal.find('span.tag-value span').livequery(function() {
						$('.bindTagForm').submit();
						// empty chosen tags
						fileDetailModal.find('.tag-value').empty();

//						fileDetailModal.find('.tag-control-helper').focus();
					});

				},
				onComplete: function() {
					$.colorbox.resize();
					// make sure it gets resized - fixing bug with shrinking to blank box
					setTimeout($.colorbox.resize, 100);
				},
				// reload itemlist to have up-to-date info (files could have been added 2 lightbox or downloaded)
				onCleanup: function() {
					$.get(linkReloadItemList);
				}
			});
		});
	});
</script>
<link rel="stylesheet" href="{$basePath}/modules/colorbox/colorbox.css">